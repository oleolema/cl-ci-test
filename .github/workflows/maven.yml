# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: |
         ls
#         mvn package
#         docker login --username=${{ secrets.USERNAME }} --password ${{ secrets.PASSWORD }} registry.cn-shanghai.aliyuncs.com
#         docker build . -t registry.cn-shanghai.aliyuncs.com/oleolema/test:2.0
#         docker push registry.cn-shanghai.aliyuncs.com/oleolema/test:2.0
    - name: Script
      run: |
        ls
        apt-get install -y ftp

        #!/usr/bin/expect
        set timeout 30
        spawn ftp ${{ secrets.HOST }}
        expect "Name"
    　　send "${{ secrets.FTP_USER }}\r"
    　　expect "Password"
    　　send "${{ secrets.FTP_PWD }}\r"
    　　interact

#    - uses: actions/checkout@master
#      with:
#        fetch-depth: 2
#    - name: FTP-Deploy-Action
#      uses: SamKirkland/FTP-Deploy-Action@3.0.0
#      with:
#        ftp-server: ftp://${{ secrets.HOST }}
#        ftp-username: ${{ secrets.FTP_USER }}
#        ftp-password: ${{ secrets.FTP_PWD }}


  ssh:
    needs: [build]
    name: ssh
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PWD }}
          port: ${{ secrets.PORT }}
          script: |
            whoami
            ls -al


