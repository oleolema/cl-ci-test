# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven
        run: |
          ls
#          apt-get install -y sshpass
#          mvn package
#      - name: Push Docker
#        run: |
#          docker login --username=${{ secrets.USERNAME }} --password ${{ secrets.PASSWORD }} registry.cn-shanghai.aliyuncs.com
#          docker build . -t ${{ secrets.REGISTRY }}:$GITHUB_RUN_NUMBER
#          docker push ${{ secrets.REGISTRY }}:$GITHUB_RUN_NUMBER
#          echo $(docker images ${{ secrets.REGISTRY }}:$GITHUB_RUN_NUMBER -q)
#          docker tag $(docker images ${{ secrets.REGISTRY }}:$GITHUB_RUN_NUMBER -q) ${{ secrets.REGISTRY }}:latest
#          docker push ${{ secrets.REGISTRY }}:latest




  pull-docker:
#    needs: [build]
    name: Pull Docker
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands pull docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PWD }}
          port: ${{ secrets.PORT }}
          script: |
            echo ${{ secrets.REGISTRY }} > 2.txt
            echo $(docker ps --filter ancestor=${{ secrets.REGISTRY }} -q) >> 2.txt
            echo $(docker images  ${{ secrets.REGISTRY }} --filter "dangling=true" -q) >> 2.txt
            docker pull ${{ secrets.REGISTRY }}:latest
            echo $(docker ps --filter ancestor=${{ secrets.REGISTRY }} -q)
            docker stop $(docker ps --filter ancestor=${{ secrets.REGISTRY }} -q)
            docker rmi -f $(docker images  ${{ secrets.REGISTRY }} --filter "dangling=true" -q)
            docker run -d -p 8060:8060 ${{ secrets.REGISTRY }}:latest



